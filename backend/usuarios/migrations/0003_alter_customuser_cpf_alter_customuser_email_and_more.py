# Generated by Django 5.0.6 on 2024-06-07 16:57

import django.core.validators
import re
import usuarios.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("usuarios", "0002_rename_is_staff_customuser_is_admin_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="customuser",
            name="cpf",
            field=models.CharField(
                max_length=14,
                null=True,
                unique=True,
                validators=[
                    usuarios.validators.eh_valido_cpf,
                    django.core.validators.RegexValidator(
                        re.compile("^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$"),
                        "CPF não está no padrão exigido",
                        "invalid",
                    ),
                ],
                verbose_name="CPF",
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="email",
            field=models.EmailField(
                max_length=254,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[a-z0-9._]+@[a-z]+\\.com$"),
                        "Endereço de email inválido",
                    )
                ],
                verbose_name="endereço de email",
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="nome_completo",
            field=models.CharField(
                max_length=100,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[a-zá-ú\\s]{2,}$", 2),
                        "Caracteres inválidos, insira apenas letras",
                    )
                ],
                verbose_name="nome",
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="telefone",
            field=models.CharField(
                max_length=20,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile(
                            "^(\\(\\d{2}\\)[\\s][9]?\\d{4}[-]\\d{4})|(\\d{2}[\\s]?[9]?\\d{4}\\d{4})$"
                        ),
                        "Número telefone inválido",
                    )
                ],
            ),
        ),
    ]
